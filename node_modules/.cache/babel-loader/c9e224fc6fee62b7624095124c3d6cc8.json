{"ast":null,"code":"import _slicedToArray from \"D:\\\\react\\\\netflix\\\\netflix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react\\\\netflix\\\\netflix\\\\src\\\\components\\\\rowPost\\\\Rowpost.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Rowpost.css\";\nimport Axios from \"../../Axios\";\nimport { API_KEY, imageUrl } from \"../../constants/Constants\";\nimport Youtube from 'react-youtube';\nfunction Rowpost(props) {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    movies = _useState2[0],\n    setMovies = _useState2[1];\n  useEffect(function () {\n    Axios.get(props.url).then(function (response) {\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    });\n  }, []);\n  var opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      autoplay: 0\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, movies.map(function (obj) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      className: props.isSmall ? 'smallPoster' : 'poster',\n      src: \"\".concat(imageUrl + obj.backdrop_path),\n      alt: \"poster\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Youtube, {\n    videoId: \"\",\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Rowpost;","map":{"version":3,"names":["React","useEffect","useState","Axios","API_KEY","imageUrl","Youtube","Rowpost","props","movies","setMovies","get","url","then","response","console","log","data","results","opts","height","width","playerVars","autoplay","title","map","obj","isSmall","backdrop_path"],"sources":["D:/react/netflix/netflix/src/components/rowPost/Rowpost.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Rowpost.css\";\r\nimport Axios from \"../../Axios\";\r\nimport { API_KEY ,imageUrl} from \"../../constants/Constants\";\r\nimport Youtube  from 'react-youtube'\r\n\r\nfunction Rowpost(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    Axios.get(props.url).then((response) => {\r\n        console.log(response.data.results);\r\n        setMovies(response.data.results);\r\n      })\r\n  },[])\r\n  \r\n    const opts = {\r\n      height: '390',\r\n      width: '640',\r\n      playerVars: {\r\n        \r\n        autoplay: 0,\r\n      },\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"row\">{props.title}</h2>\r\n      <div className=\"posters\">\r\n        {movies.map((obj) => \r\n          <img className={props.isSmall ? 'smallPoster' : 'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"poster\" />\r\n         )}\r\n      </div>\r\n      <Youtube videoId=\"\" opts={opts} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rowpost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,OAAO,EAAEC,QAAQ,QAAO,2BAA2B;AAC5D,OAAOC,OAAO,MAAO,eAAe;AAEpC,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAAA,gBACMN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCO,MAAM;IAAEC,SAAS;EAExBT,SAAS,CAAC,YAAM;IACdE,KAAK,CAACQ,GAAG,CAACH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,CAAC,UAACC,QAAQ,EAAK;MACpCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MAClCR,SAAS,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEH,IAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE;MAEVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAEH,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEf,KAAK,CAACgB,KAAK,CAAM,eACtC;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrBf,MAAM,CAACgB,GAAG,CAAC,UAACC,GAAG;IAAA,oBACd;MAAK,SAAS,EAAElB,KAAK,CAACmB,OAAO,GAAG,aAAa,GAAG,QAAS;MAAC,GAAG,YAAKtB,QAAQ,GAACqB,GAAG,CAACE,aAAa,CAAG;MAAC,GAAG,EAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG;EAAA,EAC/G,CACE,eACN,oBAAC,OAAO;IAAC,OAAO,EAAC,EAAE;IAAC,IAAI,EAAET,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC9B;AAEV;AAEA,eAAeZ,OAAO"},"metadata":{},"sourceType":"module"}