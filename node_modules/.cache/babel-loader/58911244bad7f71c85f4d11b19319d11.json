{"ast":null,"code":"import _slicedToArray from \"D:\\\\react\\\\netflix\\\\netflix\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react\\\\netflix\\\\netflix\\\\src\\\\components\\\\rowPost\\\\Rowpost.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Rowpost.css\";\nimport Axios from \"../../Axios\";\nimport { API_KEY, imageUrl } from \"../../constants/Constants\";\nimport Youtube from \"react-youtube\";\nfunction Rowpost(props) {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    movies = _useState2[0],\n    setMovies = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    urlId = _useState4[0],\n    setUrlId = _useState4[1];\n  useEffect(function () {\n    Axios.get(props.url).then(function (response) {\n      console.log(response.data.results);\n      setMovies(response.data.results);\n    }).catch(function (err) {\n      //alert('Network error')\n    });\n  }, []);\n  var opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  var handleMovie = function handleMovie(id) {\n    console.log(\"ID\", id);\n    Axios.get(\"/movie/\".concat(id, \"/videos?api_key=\").concat(API_KEY, \"&language=en-US\")).then(function (response) {\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0]);\n      } else {\n        console.log(response.data, \"array empty...!! \");\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, movies.map(function (obj) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      onClick: function onClick() {\n        return handleMovie(obj.id);\n      },\n      className: props.isSmall ? \"smallPoster\" : \"poster\",\n      src: \"\".concat(imageUrl + obj.backdrop_path),\n      alt: \"poster\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    });\n  })), urlId && /*#__PURE__*/React.createElement(Youtube, {\n    videoId: urlId.key,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }));\n}\nexport default Rowpost;","map":{"version":3,"names":["React","useEffect","useState","Axios","API_KEY","imageUrl","Youtube","Rowpost","props","movies","setMovies","urlId","setUrlId","get","url","then","response","console","log","data","results","catch","err","opts","height","width","playerVars","autoplay","handleMovie","id","length","title","map","obj","isSmall","backdrop_path","key"],"sources":["D:/react/netflix/netflix/src/components/rowPost/Rowpost.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Rowpost.css\";\r\nimport Axios from \"../../Axios\";\r\nimport { API_KEY, imageUrl } from \"../../constants/Constants\";\r\nimport Youtube from \"react-youtube\";\r\n\r\nfunction Rowpost(props) {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const [urlId, setUrlId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(props.url)\r\n      .then((response) => {\r\n        console.log(response.data.results);\r\n        setMovies(response.data.results);\r\n      })\r\n      .catch((err) => {\r\n        //alert('Network error')\r\n      });\r\n  }, []);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleMovie = (id) => {\r\n    console.log(\"ID\",id);\r\n    Axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(\r\n      (response) => {\r\n        if (response.data.results.length !== 0) {\r\n          setUrlId(response.data.results[0]);\r\n        } else {\r\n          console.log(response.data, \"array empty...!! \");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"row\">{props.title}</h2>\r\n      <div className=\"posters\">\r\n        {movies.map((obj) => (\r\n          <img\r\n            onClick={() => handleMovie(obj.id)}\r\n            className={props.isSmall ? \"smallPoster\" : \"poster\"}\r\n            src={`${imageUrl + obj.backdrop_path}`}\r\n            alt=\"poster\"\r\n          />\r\n        ))}\r\n      </div>\r\n      {urlId && <Youtube videoId={urlId.key} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rowpost;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,OAAO,EAAEC,QAAQ,QAAQ,2BAA2B;AAC7D,OAAOC,OAAO,MAAM,eAAe;AAEnC,SAASC,OAAO,CAACC,KAAK,EAAE;EAAA;EAAA,gBACMN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjCO,MAAM;IAAEC,SAAS;EAAA,iBAEER,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BS,KAAK;IAAEC,QAAQ;EAEtBX,SAAS,CAAC,YAAM;IACdE,KAAK,CAACU,GAAG,CAACL,KAAK,CAACM,GAAG,CAAC,CACjBC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MAClCV,SAAS,CAACM,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,GAAG,EAAK;MACd;IAAA,CACD,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIC,EAAE,EAAK;IAC1BZ,OAAO,CAACC,GAAG,CAAC,IAAI,EAACW,EAAE,CAAC;IACpB1B,KAAK,CAACU,GAAG,kBAAWgB,EAAE,6BAAmBzB,OAAO,qBAAkB,CAACW,IAAI,CACrE,UAACC,QAAQ,EAAK;MACZ,IAAIA,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACU,MAAM,KAAK,CAAC,EAAE;QACtClB,QAAQ,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,MAAM;QACLH,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,EAAE,mBAAmB,CAAC;MACjD;IACF,CAAC,CACF;EACH,CAAC;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEX,KAAK,CAACuB,KAAK,CAAM,eACtC;IAAK,SAAS,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrBtB,MAAM,CAACuB,GAAG,CAAC,UAACC,GAAG;IAAA,oBACd;MACE,OAAO,EAAE;QAAA,OAAML,WAAW,CAACK,GAAG,CAACJ,EAAE,CAAC;MAAA,CAAC;MACnC,SAAS,EAAErB,KAAK,CAAC0B,OAAO,GAAG,aAAa,GAAG,QAAS;MACpD,GAAG,YAAK7B,QAAQ,GAAG4B,GAAG,CAACE,aAAa,CAAG;MACvC,GAAG,EAAC,QAAQ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACZ;EAAA,CACH,CAAC,CACE,EACLxB,KAAK,iBAAI,oBAAC,OAAO;IAAC,OAAO,EAAEA,KAAK,CAACyB,GAAI;IAAC,IAAI,EAAEb,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACjD;AAEV;AAEA,eAAehB,OAAO"},"metadata":{},"sourceType":"module"}